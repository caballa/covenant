;; expected sat

;; Provided by Georgel Calin.
;;
;; About format:
;; - The non-terminal symbol appearing on the left-hand side of the
;;   first grammar production is considered the start symbol of the
;;   grammar.

;; CFG
;ter_size: 15; var_size: 9; init_size: 1; rules_size: 98.
;Ters: pio_add_one; pio_min_one; pio_non_zero; pio_zero; se_F; se_T; set_non_zero; 
;;     set_se_T; set_sf_T; set_st_T; set_zero; sf_F; sf_T; st_T; stat_0; 
;Vars: Add1; Add2; Add3; Add4; Inc1; Inc2; Inc3; Inc4; Inc5; 
;Init: Add1; 
(   Add1 -> ["st_T" Add1 ];
    Add1 -> ["sf_T" Add1 ];
    Add1 -> ["sf_F" Add1 ];
    Add1 -> ["set_st_T" Add1 ];
    Add1 -> ["set_sf_T" Add1 ];
    Add1 -> ["set_se_T" Add1 ];
    Add1 -> ["se_T" Add1 ];
    Add1 -> ["se_F" Add1 ];
    Add1 -> ["pio_zero" Add1 ];
    Add1 -> ["pio_non_zero" Add1 ];
    Add1 -> ["pio_min_one" Add1 ];
    Add1 -> [Inc1 Add2 ];
    Add2 -> ["st_T" Add2 ];
    Add2 -> ["sf_T" Add2 ];
    Add2 -> ["sf_F" Add2 ];
    Add2 -> ["set_st_T" Add2 ];
    Add2 -> ["set_sf_T" Add2 ];
    Add2 -> ["set_se_T" Add2 ];
    Add2 -> ["se_T" Add2 ];
    Add2 -> ["se_F" Add2 ];
    Add2 -> ["pio_zero" Add2 ];
    Add2 -> ["pio_non_zero" Add2 ];
    Add2 -> ["pio_min_one" Add2 ];
    Add2 -> ["stat_0" Add3 ];
    Add3 -> ["st_T" Add3 ];
    Add3 -> ["sf_T" Add3 ];
    Add3 -> ["sf_F" Add3 ];
    Add3 -> ["set_st_T" Add3 ];
    Add3 -> ["set_sf_T" Add3 ];
    Add3 -> ["set_se_T" Add3 ];
    Add3 -> ["se_T" Add3 ];
    Add3 -> ["se_F" Add3 ];
    Add3 -> ["pio_zero" Add3 ];
    Add3 -> ["pio_non_zero" Add3 ];
    Add3 -> ["pio_min_one" Add3 ];
    Add3 -> ["st_T" Add4 ];
    Add4 -> ["st_T" Add4 ];
    Add4 -> ["sf_T" Add4 ];
    Add4 -> ["sf_F" Add4 ];
    Add4 -> ["set_st_T" Add4 ];
    Add4 -> ["set_sf_T" Add4 ];
    Add4 -> ["set_se_T" Add4 ];
    Add4 -> ["se_T" Add4 ];
    Add4 -> ["se_F" Add4 ];
    Add4 -> ["pio_zero" Add4 ];
    Add4 -> ["pio_non_zero" Add4 ];
    Add4 -> ["pio_min_one" Add4 ];
    Add4 -> [];
    Inc1 -> ["sf_F" Inc3 ];
    Inc1 -> ["sf_T" Inc2 ];
    Inc2 -> ["st_T" Inc2 ];
    Inc2 -> ["sf_T" Inc2 ];
    Inc2 -> ["sf_F" Inc2 ];
    Inc2 -> ["set_st_T" Inc2 ];
    Inc2 -> ["set_sf_T" Inc2 ];
    Inc2 -> ["set_se_T" Inc2 ];
    Inc2 -> ["se_T" Inc2 ];
    Inc2 -> ["se_F" Inc2 ];
    Inc2 -> ["pio_zero" Inc2 ];
    Inc2 -> ["pio_non_zero" Inc2 ];
    Inc2 -> ["pio_min_one" Inc2 ];
    Inc2 -> ["set_non_zero" Inc5 ];
    Inc3 -> ["st_T" Inc3 ];
    Inc3 -> ["sf_T" Inc3 ];
    Inc3 -> ["sf_F" Inc3 ];
    Inc3 -> ["set_st_T" Inc3 ];
    Inc3 -> ["set_sf_T" Inc3 ];
    Inc3 -> ["set_se_T" Inc3 ];
    Inc3 -> ["se_T" Inc3 ];
    Inc3 -> ["se_F" Inc3 ];
    Inc3 -> ["pio_zero" Inc3 ];
    Inc3 -> ["pio_non_zero" Inc3 ];
    Inc3 -> ["pio_min_one" Inc3 ];
    Inc3 -> ["pio_add_one" Inc4 ];
    Inc4 -> ["st_T" Inc4 ];
    Inc4 -> ["sf_T" Inc4 ];
    Inc4 -> ["sf_F" Inc4 ];
    Inc4 -> ["set_st_T" Inc4 ];
    Inc4 -> ["set_sf_T" Inc4 ];
    Inc4 -> ["set_se_T" Inc4 ];
    Inc4 -> ["se_T" Inc4 ];
    Inc4 -> ["se_F" Inc4 ];
    Inc4 -> ["pio_zero" Inc4 ];
    Inc4 -> ["pio_non_zero" Inc4 ];
    Inc4 -> ["pio_min_one" Inc4 ];
    Inc4 -> ["set_zero" Inc5 ];
    Inc5 -> ["st_T" Inc5 ];
    Inc5 -> ["sf_T" Inc5 ];
    Inc5 -> ["sf_F" Inc5 ];
    Inc5 -> ["set_st_T" Inc5 ];
    Inc5 -> ["set_sf_T" Inc5 ];
    Inc5 -> ["set_se_T" Inc5 ];
    Inc5 -> ["se_T" Inc5 ];
    Inc5 -> ["se_F" Inc5 ];
    Inc5 -> ["pio_zero" Inc5 ];
    Inc5 -> ["pio_non_zero" Inc5 ];
    Inc5 -> ["pio_min_one" Inc5 ];
    Inc5 -> []
)

;; CFG
;ter_size: 15; var_size: 9; init_size: 1; rules_size: 88.
;Ters: pio_add_one; pio_min_one; pio_non_zero; pio_zero; se_F; se_T; 
;      set_non_zero; set_se_T; set_sf_T; set_st_T; set_zero; sf_F; sf_T; st_T; stat_0; 
;Vars: Stop1; Stop2; Stop3; Stop4; Stop5; Dec1; Dec2; Dec3; Dec4; 
;Init: Stop1; 
(   Stop1 -> ["stat_0" Stop1 ];
    Stop1 -> ["st_T" Stop1 ];
    Stop1 -> ["sf_T" Stop1 ];
    Stop1 -> ["sf_F" Stop1 ];
    Stop1 -> ["set_zero" Stop1 ];
    Stop1 -> ["set_non_zero" Stop1 ];
    Stop1 -> ["se_T" Stop1 ];
    Stop1 -> ["se_F" Stop1 ];
    Stop1 -> ["pio_zero" Stop1 ];
    Stop1 -> ["pio_non_zero" Stop1 ];
    Stop1 -> ["pio_add_one" Stop1 ];
    Stop1 -> ["set_sf_T" Stop2 ];
    Stop2 -> ["stat_0" Stop2 ];
    Stop2 -> ["st_T" Stop2 ];
    Stop2 -> ["sf_T" Stop2 ];
    Stop2 -> ["sf_F" Stop2 ];
    Stop2 -> ["set_zero" Stop2 ];
    Stop2 -> ["set_non_zero" Stop2 ];
    Stop2 -> ["se_T" Stop2 ];
    Stop2 -> ["se_F" Stop2 ];
    Stop2 -> ["pio_zero" Stop2 ];
    Stop2 -> ["pio_non_zero" Stop2 ];
    Stop2 -> ["pio_add_one" Stop2 ];
    Stop2 -> [ Dec1 Stop3 ];
    Stop3 -> ["stat_0" Stop3 ];
    Stop3 -> ["st_T" Stop3 ];
    Stop3 -> ["sf_T" Stop3 ];
    Stop3 -> ["sf_F" Stop3 ];
    Stop3 -> ["set_zero" Stop3 ];
    Stop3 -> ["set_non_zero" Stop3 ];
    Stop3 -> ["se_T" Stop3 ];
    Stop3 -> ["se_F" Stop3 ];
    Stop3 -> ["pio_zero" Stop3 ];
    Stop3 -> ["pio_non_zero" Stop3 ];
    Stop3 -> ["pio_add_one" Stop3 ];
    Stop3 -> ["se_F" Stop3 ];
    Stop3 -> ["se_T" Stop4 ];
    Stop4 -> ["stat_0" Stop4 ];
    Stop4 -> ["st_T" Stop4 ];
    Stop4 -> ["sf_T" Stop4 ];
    Stop4 -> ["sf_F" Stop4 ];
    Stop4 -> ["set_zero" Stop4 ];
    Stop4 -> ["set_non_zero" Stop4 ];
    Stop4 -> ["se_T" Stop4 ];
    Stop4 -> ["se_F" Stop4 ];
    Stop4 -> ["pio_zero" Stop4 ];
    Stop4 -> ["pio_non_zero" Stop4 ];
    Stop4 -> ["pio_add_one" Stop4 ];
    Stop4 -> ["set_st_T" Stop5 ];
    Stop5 -> ["stat_0" Stop5 ];
    Stop5 -> ["st_T" Stop5 ];
    Stop5 -> ["sf_T" Stop5 ];
    Stop5 -> ["sf_F" Stop5 ];
    Stop5 -> ["set_zero" Stop5 ];
    Stop5 -> ["set_non_zero" Stop5 ];
    Stop5 -> ["se_T" Stop5 ];
    Stop5 -> ["se_F" Stop5 ];
    Stop5 -> ["pio_zero" Stop5 ];
    Stop5 -> ["pio_non_zero" Stop5 ];
    Stop5 -> ["pio_add_one" Stop5 ];
    Stop5 -> [];
    Dec1 -> ["pio_min_one" Dec2 ];
    Dec2 -> ["pio_non_zero" Dec4 ];
    Dec2 -> ["pio_zero" Dec3 ];
    Dec3 -> ["stat_0" Dec3 ];
    Dec3 -> ["st_T" Dec3 ];
    Dec3 -> ["sf_T" Dec3 ];
    Dec3 -> ["sf_F" Dec3 ];
    Dec3 -> ["set_zero" Dec3 ];
    Dec3 -> ["set_non_zero" Dec3 ];
    Dec3 -> ["se_T" Dec3 ];
    Dec3 -> ["se_F" Dec3 ];
    Dec3 -> ["pio_zero" Dec3 ];
    Dec3 -> ["pio_non_zero" Dec3 ];
    Dec3 -> ["pio_add_one" Dec3 ];
    Dec3 -> ["set_se_T" Dec4 ];
    Dec4 -> ["stat_0" Dec4 ];
    Dec4 -> ["st_T" Dec4 ];
    Dec4 -> ["sf_T" Dec4 ];
    Dec4 -> ["sf_F" Dec4 ];
    Dec4 -> ["set_zero" Dec4 ];
    Dec4 -> ["set_non_zero" Dec4 ];
    Dec4 -> ["se_T" Dec4 ];
    Dec4 -> ["se_F" Dec4 ];
    Dec4 -> ["pio_zero" Dec4 ];
    Dec4 -> ["pio_non_zero" Dec4 ];
    Dec4 -> ["pio_add_one" Dec4 ];
    Dec4 -> []
)



;; REG
;ter_size: 17; var_size: 2; init_size: 1; rules_size: 32.
;Ters: pio_add_one; pio_min_one; pio_non_zero; pio_zero; se_F; se_T; set_non_zero; 
;      set_se_T; set_sf_T; set_st_T; set_zero; sf_F; sf_T; st_F; st_T; stat_0; stat_non_0; 
;Vars: S1; S2; 
;Init: S1; 
(   S1 -> ["st_T" S1 ];
    S1 -> ["st_F" S1 ];
    S1 -> ["sf_T" S1 ];
    S1 -> ["sf_F" S1 ];
    S1 -> ["set_st_T" S1 ];
    S1 -> ["set_sf_T" S1 ];
    S1 -> ["set_se_T" S1 ];
    S1 -> ["se_T" S1 ];
    S1 -> ["se_F" S1 ];
    S1 -> ["pio_zero" S1 ];
    S1 -> ["pio_non_zero" S1 ];
    S1 -> ["pio_min_one" S1 ];
    S1 -> ["pio_add_one" S1 ];
    S1 -> ["stat_0" S1 ];
    S1 -> [];
    S1 -> ["set_zero" S1 ];
    S1 -> ["set_non_zero" S2 ];
    S2 -> ["st_T" S2 ];
    S2 -> ["st_F" S2 ];
    S2 -> ["sf_T" S2 ];
    S2 -> ["sf_F" S2 ];
    S2 -> ["set_st_T" S2 ];
    S2 -> ["set_sf_T" S2 ];
    S2 -> ["set_se_T" S2 ];
    S2 -> ["se_T" S2 ];
    S2 -> ["se_F" S2 ];
    S2 -> ["pio_zero" S2 ];
    S2 -> ["pio_non_zero" S2 ];
    S2 -> ["pio_min_one" S2 ];
    S2 -> ["pio_add_one" S2 ];
    S2 -> ["set_zero" S1 ];
    S2 -> ["stat_non_0" S2 ]
)

;; REG
;ter_size: 17  var_size: 2  init_size: 1  rules_size: 32.
;Ters: pio_add_one; pio_min_one; pio_non_zero; pio_zero; se_F; se_T; set_non_zero; 
;      set_se_T; set_sf_T; set_st_T; set_zero; sf_F; sf_T; st_F; st_T; stat_0; stat_non_0; 
;Vars: StopFlag1; StopFlag2; 
;Init: StopFlag1; 
(   StopFlag1 -> ["stat_non_0" StopFlag1 ];
    StopFlag1 -> ["stat_0" StopFlag1 ];
    StopFlag1 -> ["st_T" StopFlag1 ];
    StopFlag1 -> ["st_F" StopFlag1 ];
    StopFlag1 -> ["set_zero" StopFlag1 ];
    StopFlag1 -> ["set_st_T" StopFlag1 ];
    StopFlag1 -> ["set_se_T" StopFlag1 ];
    StopFlag1 -> ["set_non_zero" StopFlag1 ];
    StopFlag1 -> ["se_T" StopFlag1 ];
    StopFlag1 -> ["se_F" StopFlag1 ];
    StopFlag1 -> ["pio_zero" StopFlag1 ];
    StopFlag1 -> ["pio_non_zero" StopFlag1 ];
    StopFlag1 -> ["pio_min_one" StopFlag1 ];
    StopFlag1 -> ["pio_add_one" StopFlag1 ];
    StopFlag1 -> ["sf_F" StopFlag1 ];
    StopFlag1 -> ["set_sf_T" StopFlag2 ];
    StopFlag2 -> ["stat_non_0" StopFlag2 ];
    StopFlag2 -> ["stat_0" StopFlag2 ];
    StopFlag2 -> ["st_T" StopFlag2 ];
    StopFlag2 -> ["st_F" StopFlag2 ];
    StopFlag2 -> ["set_zero" StopFlag2 ];
    StopFlag2 -> ["set_st_T" StopFlag2 ];
    StopFlag2 -> ["set_se_T" StopFlag2 ];
    StopFlag2 -> ["set_non_zero" StopFlag2 ];
    StopFlag2 -> ["se_T" StopFlag2 ];
    StopFlag2 -> ["se_F" StopFlag2 ];
    StopFlag2 -> ["pio_zero" StopFlag2 ];
    StopFlag2 -> ["pio_non_zero" StopFlag2 ];
    StopFlag2 -> ["pio_min_one" StopFlag2 ];
    StopFlag2 -> ["pio_add_one" StopFlag2 ];
    StopFlag2 -> ["sf_T" StopFlag2 ];
    StopFlag2 -> []
)

;; REG
;ter_size: 17; var_size: 2; init_size: 1; rules_size: 32.
;Ters: pio_add_one; pio_min_one; pio_non_zero; pio_zero; se_F; se_T; set_non_zero; 
;      set_se_T; set_sf_T; set_st_T; set_zero; sf_F; sf_T; st_F; st_T; stat_0; stat_non_0; 
;Vars: StopEvent1; StopEvent2; 
;Init: StopEvent1; 
(   StopEvent1 -> ["stat_non_0" StopEvent1 ];
    StopEvent1 -> ["stat_0" StopEvent1 ];
    StopEvent1 -> ["st_T" StopEvent1 ];
    StopEvent1 -> ["st_F" StopEvent1 ];
    StopEvent1 -> ["sf_T" StopEvent1 ];
    StopEvent1 -> ["sf_F" StopEvent1 ];
    StopEvent1 -> ["set_zero" StopEvent1 ];
    StopEvent1 -> ["set_st_T" StopEvent1 ];
    StopEvent1 -> ["set_sf_T" StopEvent1 ];
    StopEvent1 -> ["set_non_zero" StopEvent1 ];
    StopEvent1 -> ["pio_zero" StopEvent1 ];
    StopEvent1 -> ["pio_non_zero" StopEvent1 ];
    StopEvent1 -> ["pio_min_one" StopEvent1 ];
    StopEvent1 -> ["pio_add_one" StopEvent1 ];
    StopEvent1 -> ["se_F" StopEvent1 ];
    StopEvent1 -> ["set_se_T" StopEvent2 ];
    StopEvent2 -> ["stat_non_0" StopEvent2 ];
    StopEvent2 -> ["stat_0" StopEvent2 ];
    StopEvent2 -> ["st_T" StopEvent2 ];
    StopEvent2 -> ["st_F" StopEvent2 ];
    StopEvent2 -> ["sf_T" StopEvent2 ];
    StopEvent2 -> ["sf_F" StopEvent2 ];
    StopEvent2 -> ["set_zero" StopEvent2 ];
    StopEvent2 -> ["set_st_T" StopEvent2 ];
    StopEvent2 -> ["set_sf_T" StopEvent2 ];
    StopEvent2 -> ["set_non_zero" StopEvent2 ];
    StopEvent2 -> ["pio_zero" StopEvent2 ];
    StopEvent2 -> ["pio_non_zero" StopEvent2 ];
    StopEvent2 -> ["pio_min_one" StopEvent2 ];
    StopEvent2 -> ["pio_add_one" StopEvent2 ];
    StopEvent2 -> ["se_T" StopEvent2 ];
    StopEvent2 -> []
)

;; REG
;ter_size: 17; var_size: 2; init_size: 1; rules_size: 32.
;Ters: pio_add_one; pio_min_one; pio_non_zero; pio_zero; se_F; se_T; set_non_zero; 
;      set_se_T; set_sf_T; set_st_T; set_zero; sf_F; sf_T; st_F; st_T; stat_0; stat_non_0; 
;Vars: Stopped1; Stopped2; 
;Init: Stopped1; 
(   Stopped1 -> ["stat_non_0" Stopped1 ];
    Stopped1 -> ["stat_0" Stopped1 ];
    Stopped1 -> ["sf_T" Stopped1 ];
    Stopped1 -> ["sf_F" Stopped1 ];
    Stopped1 -> ["set_zero" Stopped1 ];
    Stopped1 -> ["set_sf_T" Stopped1 ];
    Stopped1 -> ["set_se_T" Stopped1 ];
    Stopped1 -> ["set_non_zero" Stopped1 ];
    Stopped1 -> ["se_T" Stopped1 ];
    Stopped1 -> ["se_F" Stopped1 ];
    Stopped1 -> ["pio_zero" Stopped1 ];
    Stopped1 -> ["pio_non_zero" Stopped1 ];
    Stopped1 -> ["pio_min_one" Stopped1 ];
    Stopped1 -> ["pio_add_one" Stopped1 ];
    Stopped1 -> ["st_F" Stopped1 ];
    Stopped1 -> ["set_st_T" Stopped2 ];
    Stopped2 -> ["stat_non_0" Stopped2 ];
    Stopped2 -> ["stat_0" Stopped2 ];
    Stopped2 -> ["sf_T" Stopped2 ];
    Stopped2 -> ["sf_F" Stopped2 ];
    Stopped2 -> ["set_zero" Stopped2 ];
    Stopped2 -> ["set_sf_T" Stopped2 ];
    Stopped2 -> ["set_se_T" Stopped2 ];
    Stopped2 -> ["set_non_zero" Stopped2 ];
    Stopped2 -> ["se_T" Stopped2 ];
    Stopped2 -> ["se_F" Stopped2 ];
    Stopped2 -> ["pio_zero" Stopped2 ];
    Stopped2 -> ["pio_non_zero" Stopped2 ];
    Stopped2 -> ["pio_min_one" Stopped2 ];
    Stopped2 -> ["pio_add_one" Stopped2 ];
    Stopped2 -> ["st_T" Stopped2 ];
    Stopped2 -> []
)

;; REG
;ter_size: 17; var_size: 3; init_size: 1; rules_size: 48.
;Ters: pio_add_one; pio_min_one; pio_non_zero; pio_zero; se_F; se_T; set_non_zero; 
;      set_se_T; set_sf_T; set_st_T; set_zero; sf_F; sf_T; st_F; st_T; stat_0; stat_non_0; 
;Vars: Pio1; Pio2; Pio3; 
;Init: Pio1; 
(   Pio1 -> ["stat_non_0" Pio1 ];
    Pio1 -> ["stat_0" Pio1 ];
    Pio1 -> ["st_T" Pio1 ];
    Pio1 -> ["st_F" Pio1 ];
    Pio1 -> ["sf_T" Pio1 ];
    Pio1 -> ["sf_F" Pio1 ];
    Pio1 -> ["set_zero" Pio1 ];
    Pio1 -> ["set_st_T" Pio1 ];
    Pio1 -> ["set_sf_T" Pio1 ];
    Pio1 -> ["set_se_T" Pio1 ];
    Pio1 -> ["set_non_zero" Pio1 ];
    Pio1 -> ["se_T" Pio1 ];
    Pio1 -> ["se_F" Pio1 ];
    Pio1 -> ["pio_non_zero" Pio1 ];
    Pio1 -> ["pio_min_one" Pio2 ];
    Pio1 -> ["pio_add_one" Pio3 ];
    Pio1 -> [];
    Pio2 -> ["stat_non_0" Pio2 ];
    Pio2 -> ["stat_0" Pio2 ];
    Pio2 -> ["st_T" Pio2 ];
    Pio2 -> ["st_F" Pio2 ];
    Pio2 -> ["sf_T" Pio2 ];
    Pio2 -> ["sf_F" Pio2 ];
    Pio2 -> ["set_zero" Pio2 ];
    Pio2 -> ["set_st_T" Pio2 ];
    Pio2 -> ["set_sf_T" Pio2 ];
    Pio2 -> ["set_se_T" Pio2 ];
    Pio2 -> ["set_non_zero" Pio2 ];
    Pio2 -> ["se_T" Pio2 ];
    Pio2 -> ["se_F" Pio2 ];
    Pio2 -> ["pio_add_one" Pio1 ];
    Pio2 -> ["pio_zero" Pio2 ];
    Pio2 -> [];
    Pio3 -> ["stat_non_0" Pio3 ];
    Pio3 -> ["stat_0" Pio3 ];
    Pio3 -> ["st_T" Pio3 ];
    Pio3 -> ["st_F" Pio3 ];
    Pio3 -> ["sf_T" Pio3 ];
    Pio3 -> ["sf_F" Pio3 ];
    Pio3 -> ["set_zero" Pio3 ];
    Pio3 -> ["set_st_T" Pio3 ];
    Pio3 -> ["set_sf_T" Pio3 ];
    Pio3 -> ["set_se_T" Pio3 ];
    Pio3 -> ["set_non_zero" Pio3 ];
    Pio3 -> ["se_T" Pio3 ];
    Pio3 -> ["se_F" Pio3 ];
    Pio3 -> ["pio_min_one" Pio1 ];
    Pio3 -> ["pio_non_zero" Pio3 ]
)

